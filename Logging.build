<?xml version="1.0" ?>
<project name="Common.Logging" default="build" basedir=".">

  <property name="project.version" value="2.0"/>
  <property name="project.basedir" value="${project::get-base-directory()}" />
  <!-- path to Common.Logging build output shared by all plugin modules-->
  <property name="common.logging.base-version.dir" value="${project.basedir}/modules/Common.Logging/build/net/2.0/release" />
  <!--target dir for packaging dist -->
  <property name="package.dir" value="${project::get-base-directory()}/../package" />

  <patternset id="nonredistributables">
    <include name="Microsoft.*" />
  </patternset>
  
  <target name="build-common">
    <!-- ******* -->
    <!-- Common.Logging  -->
    <!-- ******* -->
    <!-- build base Common.Logging module -->
    <exec workingdir=".\modules\Common.Logging" program="cmd.exe" commandline="/c nant"/>
  </target>

  <target name="build-EntLib">
    <!-- ******* -->
    <!-- EntLib  -->
    <!-- ******* -->

    <!-- copy base common.logging .dll to EntLib build directory -->
    <copy todir="modules/Common.Logging.EntLib/lib/net/2.0/"
          file="${common.logging.base-version.dir}\Common.Logging.dll"/>
    <!-- copy base common.logging.tests.dll to EntLib build directory -->
    <copy todir="modules/Common.Logging.EntLib/lib/net/2.0/"
          file="${common.logging.base-version.dir}\Common.Logging.Tests.dll"/>
    <!-- build EntLib module -->
    <exec workingdir=".\modules\Common.Logging.EntLib" program="cmd.exe" commandline="/c nant"/>
  </target>

  <target name="build-EntLib41" depends="build-common">
    <!-- ******* -->
    <!-- EntLib 4.1 -->
    <!-- ******* -->

    <!-- copy base common.logging .dll to EntLib41 build directory -->
    <copy todir="modules/Common.Logging.EntLib41/lib/net/2.0/"
          file="${common.logging.base-version.dir}\Common.Logging.dll"/>
    <!-- copy base common.logging.tests.dll to EntLib41 build directory -->
    <copy todir="modules/Common.Logging.EntLib41/lib/net/2.0/"
          file="${common.logging.base-version.dir}\Common.Logging.Tests.dll"/>
    <!-- build EntLib41 module -->
    <exec workingdir=".\modules\Common.Logging.EntLib41" program="cmd.exe" commandline="/c nant"/>
  </target>

  <target name="build-Log4Net" depends="build-common">
    <!-- ******* -->
    <!-- log4net -->
    <!-- ******* -->

    <!-- copy base common.logging .dll to Log4Net build directory -->
    <copy todir="modules/Common.Logging.Log4Net/lib/net/2.0/"
          file="${common.logging.base-version.dir}\Common.Logging.dll"/>
    <!-- copy base common.logging.tests.dll to Log4Net build directory -->
    <copy todir="modules/Common.Logging.Log4Net/lib/net/2.0/"
          file="${common.logging.base-version.dir}\Common.Logging.Tests.dll"/>

    <!-- build log4net 1.2.10 module -->
    <exec workingdir=".\modules\Common.Logging.Log4Net" program="cmd.exe" commandline="/c nant"/>
  </target>

  <target name="build-Log4Net129" depends="build-common">
    <!-- ******* -->
    <!-- log4net 1.2.9 -->
    <!-- ******* -->

    <!-- copy base common.logging.dll to Log4Net129 build directory -->
    <copy todir="modules/Common.Logging.Log4Net129/lib/net/2.0/"
          file="${common.logging.base-version.dir}\Common.Logging.dll"/>
    <!-- copy base common.logging.tests.dll to Log4Net129 build directory -->
    <copy todir="modules/Common.Logging.Log4Net129/lib/net/2.0/"
          file="${common.logging.base-version.dir}\Common.Logging.Tests.dll"/>
    <!-- build log4net 1.2.9 module -->
    <exec workingdir=".\modules\Common.Logging.Log4Net129" program="cmd.exe" commandline="/c nant"/>
  </target>

  <target name="build-NLog" depends="build-common">
    <!-- ******* -->
    <!-- NLog    -->
    <!-- ******* -->

    <!-- copy base common.logging .dll to NLog build directory -->
    <copy todir="modules/Common.Logging.NLog/lib/net/2.0/"
          file="${common.logging.base-version.dir}\Common.Logging.dll"/>
    <!-- copy base common.logging.tests.dll to NLog build directory -->
    <copy todir="modules/Common.Logging.NLog/lib/net/2.0/"
          file="${common.logging.base-version.dir}\Common.Logging.Tests.dll"/>
    <!-- build NLog module -->
    <exec workingdir=".\modules\Common.Logging.NLog" program="cmd.exe" commandline="/c nant"/>
  </target>

  <target name="doc">
    <nant buildfile="doc/reference/docbook.build" target="all" />
  </target>

  <target name="build" depends="build-common" description="compiles and tests all modules">
    <call target="build-EntLib" cascade="false" />
    <call target="build-EntLib41" cascade="false" />
    <call target="build-Log4Net" cascade="false" />
    <call target="build-Log4Net129" cascade="false" />
    <call target="build-NLog" cascade="false" />
  </target>

  <target name="package.sources">
    <!-- Copy global solution files -->
    <copy todir="${package.dir}">
      <fileset basedir="${project.basedir}">
        <include name="*.sln"/>
      </fileset>
    </copy>

    <!-- Copy shared module files -->
    <copy todir="${package.dir}/modules">
      <fileset basedir="${project.basedir}/modules">
        <include name="*.cs"/>
      </fileset>
    </copy>

    <!-- Copy Common.Logging sources -->
    <mkdir dir="${package.dir}/modules/Common.Logging"/>
    <copy todir="${package.dir}/modules/Common.Logging" failonerror="true" >
      <fileset basedir="${project::get-base-directory()}\modules\Common.Logging">
        <include name="*.sln"/>
        <include name="*.build"/>
        <include name="lib/**"/>
        <include name="src/**"/>
        <include name="test/**"/>
      </fileset>
    </copy>

    <!-- Copy Common.Logging.${modulename} sources -->
    <foreach item="String" in="EntLib,EntLib41,Log4Net,Log4Net129,NLog" delim="," property="modulename">
      <mkdir dir="${package.dir}/modules/Common.Logging.${modulename}"/>
      <copy todir="${package.dir}/modules/Common.Logging.${modulename}" failonerror="true" >
        <fileset basedir="${project::get-base-directory()}\modules\Common.Logging.${modulename}">
          <include name="*.sln"/>
          <include name="*.build"/>
          <include name="src/**"/>
          <include name="test/**"/>
          <include name="lib/**"/>
          <!-- but exclude non-redists -->
          <exclude name="lib/**/Microsoft.*" />
        </fileset>
      </copy>
    </foreach>

  </target>

  <target name="package.binaries" depends="build-common">

    <foreach item="String" in="debug,release" delim="," property="release-mode">

      <!-- Copy Common.Logging dll -->
      <copy todir="package/Common.Logging/bin/net/2.0/${release-mode}"
            file="${common.logging.base-version.dir}\Common.Logging.dll"/>
      <copy todir="package/Common.Logging/bin/net/2.0/${release-mode}"
            file="${common.logging.base-version.dir}\Common.Logging.pdb" />
      <copy todir="package/Common.Logging/bin/net/2.0/${release-mode}"
            file="${common.logging.base-version.dir}\Common.Logging.xml"/>

      <foreach item="String" in="EntLib,EntLib41,Log4Net,Log4Net129,NLog" delim="," property="modulename">
        <!-- ensure module was built -->
        <call target="build-${modulename}" cascade="false" />

        <!-- Copy Common.Logging.{modulename} dll -->
        <copy todir="package/Common.Logging/bin/net/2.0/${release-mode}"
              file="modules\Common.Logging.${modulename}\build\net\2.0\${release-mode}\Common.Logging.${modulename}.dll"/>
        <copy todir="package/Common.Logging/bin/net/2.0/${release-mode}"
              file="modules\Common.Logging.${modulename}\build\net\2.0\${release-mode}\Common.Logging.${modulename}.pdb"/>
        <copy todir="package/Common.Logging/bin/net/2.0/${release-mode}"
              file="modules\Common.Logging.${modulename}\build\net\2.0\${release-mode}\Common.Logging.${modulename}.xml"/>
        <!-- Copy {modulename} redistributables -->
        <!--<mkdir dir="package/Common.Logging/redist/${modulename}"/>-->
        <copy todir="package/Common.Logging/redist/${modulename}">
          <fileset basedir="modules\Common.Logging.${modulename}\redist">
            <include name="**/*"/>
          </fileset>
        </copy>
      </foreach>

    </foreach>

  </target>

  <target name="package" description="Builds all modules and documentation">

    <!-- clean package dir -->
    <delete dir="package"/>

    <!-- build and copy binaries -->
    <call target="package.binaries" cascade="false" />

    <!-- copy sources -->
    <call target="package.sources" cascade="false" />

    <!-- copy docs -->
    <!--<call target="doc" cascade="false"/>-->
    <copy todir="${package.dir}/doc/">
      <fileset basedir="${project.basedir}/doc/reference/target/">
        <include name="**/*"/>
      </fileset>
    </copy>

    <!-- build scripts -->
    <copy todir="${package.dir}/shared/">
      <fileset basedir="${project.basedir}/shared">
        <include name="**/*"/>
      </fileset>
    </copy>
    <copy todir="${package.dir}" file="${project.basedir}/Logging.build"/>

    <!-- copy over readme etc. -->
    <copy todir="${package.dir}" file="${project.basedir}/readme.txt"/>
    <copy todir="${package.dir}" file="${project.basedir}/license.txt"/>
    <copy todir="${package.dir}" file="${project.basedir}/changelog.txt"/>

    <!-- TODO: JUST FOR TESTING! -->
    <copy todir="${package.dir}\modules" file="${project.basedir}/modules/Common.Net.snk"/>
    <copy todir="${package.dir}\modules">
      <fileset basedir="${project.basedir}\modules">
        <include name="**/lib/**/Microsoft.*"/>
      </fileset>
    </copy>

  </target>

  <target name="package-zip" depends="package" description="Build Package distribution as .zip file">
    <property name="project.zip-path" value="${package.dir}/Common.Logging-${project.version}.zip"/>
    <zip zipfile="${project.zip-path}">
      <fileset basedir="${package.dir}">
        <include name="**/*"/>
        <exclude name="*.zip"/>
      </fileset>
    </zip>
  </target>

</project>